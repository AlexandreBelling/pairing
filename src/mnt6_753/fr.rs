use ff::{Field, PrimeField, PrimeFieldRepr};

#[derive(PrimeField)]
#[PrimeFieldModulus = "41898490967918953402344214791240637128170709919953949071783502921025352812571106773058893763790338921418070971888253786114353726529584385201591605722013126468931404347949840543007986327743462853720628051692141265303114721689601"]
#[PrimeFieldGenerator = "17"]
pub struct Fr(FrRepr);

#[allow(dead_code)]
fn print_repr(name: &str, s: &str) {
    let x = Fr::from_str(s).unwrap();
    match x {
        Fr(FrRepr(a)) => println!(
            "pub const {}: Fr = Fr(FrRepr([{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]));",
            name, a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11]
        ),
    }
}

#[test]
fn test_cofactor() {
    print_repr("G2_COFACTOR_A", "83796981935837906804688429582481274256341419839907898143567005842050705625142213546117787527580677842836141943777735719481623438831225589611811028240725871118602880560301024476790563516104539402789102107590883924112247970201612");
    print_repr("G2_COFACTOR_B", "4093824176386619240189397362092722655665393935800239548004477969248636202058712317826153347355337978353395089408014");
    print_repr("G2_COFACTOR_C", "286567692347063346813257815346490585896577575506016768360313457847404534144109862247830734314873658484737656258560402198867230197358788448663632590251525404701867711068012161647933717461014723104877271064843878406");
}

// It is computed as 2*(q³ + 1) / r
// COFACTOR = 3510967090777572233488540950933374518373895424064008919428420140560779000233974992248197149646778932571956302280311017277531458038349199054367200744189520046288796570651727101329157287849169083898932359004454464490619905678379270021342745816823218496697809615571808458807494990228873320511733864120944739259385004396846276859845751585270474278624395873989959434393934345835550787006221735852321286149835872779336737936547657953820569411518376528402841604
// AS cofactor is larger than R (because G2 is a cubic twist) => therefore cofactor ~= q²
// We write the cofactor as A*B*C with
// ==============================
// G2_COFACTOR_A = 20949245483959476701172107395620318564085354959976974535891751460512676406285553386529446881895169460709035485944229238661586528745796927534848120927398198082860708162675032220735209068923199234805967859529954082110392238080001
// ==============================
// G2_COFACTOR_B = 48103893189344378188684517555959399687911262824286967935457523445494090485156264951847179981389596924705018337415227518406420652644779936782779423636716034285317368889495164569383295003386147055686846597505941519102702905431
// ==============================
// G2_COFACTOR_C = 3484
// ==============================
pub const G2_COFACTOR_A: Fr = Fr(FrRepr([4088252769461388818, 15701833077323833744, 6291311195574969296, 2979625750674905069, 1828624411224828946, 9563360582032129579, 5182548249409179605, 10548008518262024640, 6114414951915220221, 8323202827556782838, 16004569139440407222, 122222380965599]));
pub const G2_COFACTOR_B: Fr = Fr(FrRepr([7194889417243929925, 5015118016899500499, 17574494250249090280, 7608185854330528472, 12583818693503468779, 4614483295365378743, 9120233088599576097, 11676821255967772890, 7754878391613746951, 10746967049813136448, 4933250592310617133, 275974343293496]));
pub const G2_COFACTOR_C: Fr = Fr(FrRepr([1198940498986194849, 1280165948921191892, 7496679417662164030, 10827448092288621082, 6963950095525473282, 10760720142795226899, 3235643279620995814, 8298233696856653681, 4049910860070542681, 18240688148637104177, 9048406991646182561, 23019405294725]));